@using SethBlog.Services
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@inject IFileService _fileService
@model IPagedList<Post>
@{
    ViewData["Title"] = "Search results";
}
<section class="blog-list px-3 py-5 p-md-5">
    <div class="container">
        <h1 class="text-center p-2">Search results</h1>
        @foreach (var post in Model)
        {
            @*<div class="card shadow m-3">
                                <div class="row">
                                    <div class="col">
                                        <img class="mr-3 img-fluid post-thumb d-none d-md-flex"
                                             src="@_fileService.DecodeFile(post.PostImage,post.ContentType)" alt="image">
                                    </div>
                                    <div class="col">
                                        <div class="row">
                                            <h3 class="title mb-1"><a href="blog-post.html">@post.Title</a></h3>

                                        </div>
                                        <div class="row">
                                            <span class="date">@post.Created.ToString("MMM dd, yyyy")</span>@if (post.ReadTime is not
                null)
                                            {
                                                <span class="time">@post.ReadTime min to read</span>
                                            }
                                            <span class="comment"><a href="#">@post.Comments.Count comments</a></span>
                                        </div>
                                        <div class="row">
                                            <div class="col">
                                                <div class="intro">
                                                    @post.Abstract
                                                </div>
                                            </div>
                                            <div class="col">
                                                <a class="btn btn-outline-primary" asp-controller="Posts" asp-action="Details"
                                                   asp-route-slug="@post.Slug">Read more &rarr;</a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>*@
            <div class="item p-2">
                <div class="media">
                    <img class="mr-3 img-fluid post-thumb d-none d-md-flex"
                         src="@_fileService.DecodeFile(post.PostImage,post.ContentType)" alt="image">
                    <div class="media-body">
                        <h3 class="title mb-1"><a href="blog-post.html">@post.Title</a></h3>
                        <div class="meta mb-1">
                            <span class="date">@post.Created.ToString("MMM dd, yyyy")</span>@if (post.ReadTime is not
null)
                            {
                                <span class="time">@post.ReadTime min to read</span>
                            }
                            <span class="comment"><a href="#">@post.Comments.Count comments</a></span>
                        </div>
                        <div class="intro">
                            @post.Abstract
                        </div>
                        <a class="btn btn-outline-primary" asp-controller="Posts" asp-action="Details"
                           asp-route-slug="@post.Slug">Read more &rarr;</a>
                    </div>
                    <!--//media-body-->
                </div>
                <!--//media-->
            </div>
            <!--//item-->

        }
        <div class="row">
            <div class="col h3">
                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
            </div>
        </div>
        <div class="row">
            <div class="col">
                @Html.PagedListPager(Model, page => Url.Action("SearchIndex", new { page = page, searchString = ViewData["SearchString"] }),
                    new PagedListRenderOptions
                    {
                        LiElementClasses = new string[] { "page-item" },
                        PageClasses = new string[] { "page-link" }
                    }
               )
            </div>
        </div>
        @*<nav class="blog-nav nav nav-justified my-5">
                <a class="nav-link-prev nav-item nav-link d-none rounded-left" href="#">Previous<i class="arrow-prev fas fa-long-arrow-alt-left"></i></a>
                <a class="nav-link-next nav-item nav-link rounded" href="#">Next<i class="arrow-next fas fa-long-arrow-alt-right"></i></a>
            </nav>*@

    </div>
</section>
