@using SethBlog.Services
@using SethBlog.Enums
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@inject IFileService _fileService
@model IPagedList<Post>
@{
    ViewData["Title"] = "Blog posts";
}
<section class="blog-list px-3 py-5 p-md-5">
    <div class="container">
        <h1 class="text-center">@ViewData["BlogName"]</h1>
        <hr />
        @if (Model.Count() == 0)
        {
            <h4>Looks like this blog has no posts yet</h4>
            <a asp-action="Create" asp-route-blogId="@ViewData["BlogId"]">Create New</a>
        }
        else
        {
            <img class="img-fluid card-img-custom" src="@_fileService.DecodeFile(Model.FirstOrDefault()?.Blog.BlogImage, Model.FirstOrDefault()?.Blog.ContentType)"/>
            @if (User.IsInRole("Administrator"))
            {
                <hr />
                <a asp-action="Create" asp-route-blogId="@Model.FirstOrDefault()?.BlogId">Create New</a> <span> | </span>
                <a asp-controller="Blogs" asp-action="Edit" asp-route-id="@Model.FirstOrDefault()?.BlogId">Edit Blog</a>
            <hr />
            }
            @foreach (var post in Model)
            {


                <div class="card shadow m-3 p-2 animate__animated animate__fadeInUp">
                    <div class="card-body">

                        <div class="row">
                            <div class="col-md-3 d-sm-none d-md-inline">
                                <img class="mr-3 img-fluid post-thumb"
                                     src="@_fileService.DecodeFile(post.PostImage,post.ContentType)" alt="image">
                            </div>
                            <div class="col-md-9 col-sm">
                                <div class="row">
                                    <h3 class="title mb-1">
                                        <a asp-controller="Posts" asp-action="Details"
                                           asp-route-slug="@post.Slug" asp-route-page="@Model.PageNumber">@post.Title</a>
                                    </h3>

                                </div>
                                <div class="row">
                                    <div class="meta">

                                        <span class="date"> @string.Format("{0:MMM dd yyyy}", post.PublishedDate)</span>@if (post.ReadTime is not null)
                                        {
                                            <span class="time">@post.ReadTime min to read</span>
                                        }
                                        <span class="comment"><a href="#">@post.Comments.Count comments</a></span>
                                    </div>
                                </div>
                                <br />
                                <div class="row">
                                    <div class="col-7 p-0">
                                        <div class="intro">
                                            @post.Abstract
                                        </div>
                                    </div>
                                    <div class="col-5">
                                        <a class="btn btn-outline-primary" asp-controller="Posts" asp-action="Details"
                                           asp-route-slug="@post.Slug" asp-route-page="@Model.PageNumber">Read more &rarr;</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    @if (post.PostState != PostState.Published)
                    {

                        <div class="card-footer">
                            <p class="text-danger">Post is not published, it is currently @post.PostState</p>
                        </div>
                    }
                </div>


            }


        }
        <div class="row text-center">
            <div class="col h3">
                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
            </div>
        </div>
        <div class="row text-center">
            <div class="col justify-content-center">
                @Html.PagedListPager(Model, page => Url.Action("BlogPostIndex", new
                {
                    page = page,
               id = @Model.FirstOrDefault()?.BlogId
                }),
                    new PagedListRenderOptions
                    {
                        LiElementClasses = new string[] { "page-item" },
                        PageClasses = new string[] { "page-link" }
                    }
               )
            </div>
        </div>
    </div>
</section>